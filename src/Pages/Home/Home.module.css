.HomeContainer {
  height: 100vh;
  transition: background-color var(--transition-slow);
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: flex-end;
  position: relative;
  --animation-time: 6.2s;
}

.HomeContainer.frontend {
  background-color: var(--ts-primary);
}

.HomeContainer.backend {
  background-color: var(--django-primary);
}

.HomeContainer .hero {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1em;
  font-family: "merriweather", serif;
  position: relative;
  z-index: 1;
}

.HomeContainer .hero h1 {
  color: var(--text-color);
  font-size: 4em;
  font-weight: 300;
}

.HomeContainer .hero h1 span {
  font-weight: 500;
}
.HomeContainer .hero h2 {
  color: var(--text-color);
  font-size: 2em;
  font-weight: 400;
  text-align: center;
}
.HomeContainer .hero h2 span {
  font-weight: 700;
  position: relative;
}
.HomeContainer .hero h2 span.active::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 4px;
  bottom: -5px;
  background-color: var(--text-color);
  animation: underlineAnimation 0.7s ease;
}

.HomeContainer .hero .cta button {
  margin-top: 1em;
  background-color: var(--text-color);
  border: none;
  padding: 0.5em 1em;
  font-size: 1.3em;
  font-weight: 400;
  font-family: "merriweather", serif;
  border-radius: 0.2em;
}

.hero.frontendMode .cta button {
  color: var(--ts-primary);
}

.hero.backendMode .cta button {
  color: var(--django-primary);
}

.iconCircle {
  margin-top: 1.5em;
  background-color: var(--text-color);
  height: 10em;
  width: 100vw;
  border-top-left-radius: 50% 100%;
  border-top-right-radius: 50% 100%;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  position: relative;
  z-index: 1;
}

.frameworkIconsContainer {
  transform: translateY(37%);
}

.frameworkIcons {
  height: 5em;
  width: 1em;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 1em;
  animation: rotate calc(var(--animation-time) * 2) ease infinite;
  transform-origin: center center;
}

@keyframes rotate {
  0% {
    transform: rotate(0);
  }
  45% {
    transform: rotate(1deg);
  }
  50% {
    transform: rotate(180deg);
  }
  55% {
    transform: rotate(180deg);
  }
  95% {
    transform: rotate(181deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.iconCircle .icons {
  font-size: 6em;
}

.django {
  color: var(--django-primary);
  transform: translateX(-10px) rotate(180deg);
}
.react {
  color: var(--ts-primary);
}

@keyframes underlineAnimation {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

.backgroundIconsContainer {
  position: fixed;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
}

.backgroundIconsContainer .frontendIcons {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  place-items: center;
  width: 100vw;
  height: 100vh;
  position: fixed;
  inset: 0;
}

.backgroundIconsContainer .icons {
  font-size: clamp(100px, 120px, 150px);
}

.backgroundIconsContainer span {
  color: var(--bg-icons);
  /* position: absolute; */
}

.frontendIcons span:nth-child(1)
/* ,
.backendIcons span:nth-child(1) */ {
  /* position: relative; */
  display: inline-block;
  transform: rotate(20deg);
  animation: iconsInAndOut1 calc(var(--animation-time) * 2) ease infinite;
}
.frontendIcons span:nth-child(2)
/* ,
.backendIcons span:nth-child(2) */ {
  display: inline-block;
  transform: rotate(10deg);
}
.frontendIcons span:nth-child(3)
/* ,
.backendIcons span:nth-child(3) */ {
  display: inline-block;
  transform: rotate(-20deg);
}
.frontendIcons span:nth-child(4)
/* ,
.backendIcons span:nth-child(4) */ {
  display: inline-block;
  transform: rotate(-15deg);
}

@keyframes iconsInAndOut1 {
  0% {
    transform: rotate(20deg) translate(1em 100vh);
  }
  45% {
    transform: rotate(20deg) translate(1em 100vh);
  }
  50% {
    transform: rotate(30deg) translate(1em 100vh);
  }
  95% {
    transform: rotate(30deg) translate(1em 100vh);
  }
  100% {
    transform: rotate(20deg) translate(1em 100vh);
  }
}
